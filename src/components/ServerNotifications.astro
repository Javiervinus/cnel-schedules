---
import { fetchAllFeatureFlags, fetchFeatureFlag } from "@/utils/api-client";

// Obtener la URL base desde Astro
const url = new URL(Astro.request.url);
const baseUrl = url.origin;
const clientCookies = Astro.request.headers.get("cookie");

const headers: HeadersInit = {};
if (clientCookies) {
  headers["Cookie"] = clientCookies;
}

// Obtener una feature flag especÃ­fica
const newScheduleAvailable = await fetchFeatureFlag(
  "newScheduleAvailable",
  baseUrl,
  headers
);

// Obtener todas las feature flags
const featureFlags = await fetchAllFeatureFlags(baseUrl, headers);

// Usar las feature flags en el componente
console.log("ðŸš€ ~ newScheduleAvailable:", newScheduleAvailable);
console.log("ðŸš€ ~ featureFlags:", featureFlags);
---

<h1>Â¡Hola mundo!</h1>
<!-- ---
import { FeatureFlagEnum } from "@/enums/feature-flag.enum";
import { GET } from "@/pages/api/feature-flag/[flag]";
import { createContext } from "astro/middleware";

const params = { flag: FeatureFlagEnum.newScheduleAvailable};
const context = createContext({
  request: Astro.request,
  params: params,
  defaultLocale: "es",
});
let response = await GET(context);
const data = await response.json();
console.log(data);
---

<h1>world!</h1> -->
